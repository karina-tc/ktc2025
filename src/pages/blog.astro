---
// Components
import BaseLayout from "../layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BlogYearSection from "../components/BlogYearSection.astro";

//Assets
import scribble from "../assets/scribbles/loop-down.svg";

const isDev = import.meta.env.PUBLIC_SHOW_DRAFTS;

// Get all blog posts and filter drafts only in production
const allPosts = await getCollection("blog", ({ data }) => {
  return isDev ? true : data.status === "published";
});

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.publishDate.getTime() - a.data.publishDate.getTime(),
);

// Filter notebooks
const notebooks = sortedPosts.filter((post: CollectionEntry<"blog">) =>
  post.data.tags?.includes("notebook"),
);

// Group other posts by year (excluding notebooks)
const postsByYear = sortedPosts
  .filter((post) => !post.data.tags?.includes("notebook"))
  .reduce((acc: Record<number, BlogPost[]>, post: BlogPost) => {
    const year = post.data.publishDate.getFullYear();
    if (!acc[year]) acc[year] = [];
    acc[year].push(post);
    return acc;
  }, {});

type BlogPost = CollectionEntry<"blog">;
---

<BaseLayout
  title="Karina Tovar | Blog"
  description="Blog posts by Karina Tovar"
>
  <section class="neue-container py-20" data-intersection-observer={true}>
    <div class="mx-auto flex flex-col md:flex-row gap-4">
      <div class="flex-1 flex flex-col gap-4">
        <h4>Blog</h4>
        <h1 class="mt-4">Light notes & deep thoughts</h1>
        <p class="md:max-w-xl mt-4 caramel-text text-pretty">
          Collections of thoughts and rants
        </p>
      </div>
      <div
        class="flex-1 md:max-w-md justify-center items-center hidden md:flex">
        <Image
          src={scribble}
          alt="Scribble"
          loading="eager"
          draggable={false}
        />
      </div>
    </div>
  </section>

  <!-- Spacer -->
  <div class="spacer-small"></div>

  <!-- Blog Posts -->
  <div class="grid-container blog-posts">
    <div
      class="grid-content blog-posts-listing"
      data-intersection-observer={true}
    >
      {
        Object.entries(postsByYear).map(([year, yearPosts]) => {
          const typedPosts = yearPosts as BlogPost[];
          return <BlogYearSection year={year} posts={typedPosts} />;
        })
      }
    </div>

    <div class="blog-posts-notes" data-intersection-observer={true}>
      <div class="blog-posts-notes-punches"></div>
      <div class="blog-posts-notes-content">
        <h4>Notebooks</h4>
        {
          notebooks.map((post: BlogPost) => (
            <a href={`/blog/${post.slug}`}>{post.data.title}</a>
          ))
        }
      </div>
    </div>
  </div>
</BaseLayout>

<style lang="scss">
  // Breakpoint mixins
  @use "../styles/base/_breakpoints.scss" as *;

  .visual {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .blog-posts {
    max-width: var(--content-narrow-plus);
    margin: 0 auto;
    padding: var(--spacing-base);
    position: relative;
  }

  .blog-posts-listing {
    display: flex;
    flex-direction: column-reverse;
    gap: var(--spacing-double);
  }

  .blog-posts-notes {
    display: flex;
    flex-direction: row;
    position: relative;
    margin-left: 60px;
    height: fit-content;
    min-height: 240px;

    background-color: var(--color-surface);
    padding: 40px 20px 20px 40px;
    border-radius: var(--border-radius-base);
    overflow: hidden;

    transform: rotate(2deg);
    transition: transform 0.3s ease-in-out;

    &:hover {
      transform: rotate(0deg);
    }

    @include tablet {
      margin-top: 80px;
      margin-left: 0;
      transform: rotate(0deg);
    }

    .blog-posts-notes-punches {
      position: absolute;
      top: 0;
      left: 0;
      width: 20px;
      height: 100%;
      height: stretch;
      height: -webkit-fill-available;
      height: -moz-available;
      margin: 20px 0;

      background-image: url("/assets/paper-punch-pattern.svg");
      background-repeat: repeat-y;
      background-size: 12px 23px;
      overflow: hidden;
    }

    .blog-posts-notes-content {
      flex: 1;
      display: flex;
      flex-direction: column;

      position: relative;
    }

    h4 {
      margin-bottom: var(--spacing-base);
    }

    a {
      display: block;
      padding: var(--spacing-small) 0;
      margin-bottom: var(--spacing-small);
      border-bottom: 1px solid var(--color-border);

      &:first-child {
        padding-top: 0;
      }

      &:last-child {
        border-bottom: none;
        padding-bottom: 0;
      }

      &:hover {
        text-decoration: underline;
      }
    }
  }
</style>
