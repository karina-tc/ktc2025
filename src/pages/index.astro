---
// Layouts
import BaseLayout from "../layouts/BaseLayout.astro";

// Components
import Divider from "../components/Divider.astro";

// Assets
import { Image } from "astro:assets";
import hand from "../assets/illustrations/hand.svg";
import sheet from "../assets/illustrations/sheet.svg";
import scribble from "../assets/illustrations/scribble.svg";
import flower from "../assets/illustrations/flower.svg";
import column1 from "../assets/artwork/column1.png";
import column2 from "../assets/artwork/column2.png";
import column3 from "../assets/artwork/column3.png";
import column4 from "../assets/artwork/column4.png";

// Data
const bookingLink =
	"https://cal.com/karina-tovar-djofxs/quick-chat?month=2025-01&date=2025-01-28";

// Data structure for navigation items
const navItems = [
	{ icon: hand, alt: "Hand", text: "Read philosophy manifesto", href: "#" },
	{
		icon: scribble,
		alt: "Scribble",
		text: "Look at my most recent work",
		href: "/work",
	},
	{ icon: flower, alt: "Flower", text: "Learn about me", href: "/about" },
	{ icon: sheet, alt: "Sheet", text: "Read my posts and notes", href: "/blog" },
];
---

<BaseLayout
	title="Karina Tovar"
	description="Karina Tovar is a Lead Product Designer."
>
	<div class="grid-container">
		<div class="grid-item">
			<div class="top-section">
				<h2>Karina Tovar</h2>
				<h1>Pixel Philosopher Cautious Technologist</h1>
				<p>
					My motivation is to build products that aim to help people have
					happier days. Life is too short to be ruined by awful experiences.
					Every product needs to be crafted for human joy.
				</p>
			</div>
			<div class="spacer-base"></div>
			<div class="bottom-section">
				<div class="subtitle">
					<Divider color="var(--color-accent)" width={82} height={6} />
					<h3>Get Started</h3>
				</div>
				<ul class="list-section">
					{
						navItems.map(({ icon, alt, text, href }) => (
							<li>
								<Image src={icon} alt={alt} />
								<a href={href}>{text}</a>
							</li>
						))
					}
				</ul>
				<div class="secondary-actions">
					<a class="action-link" href="#">Download CV</a>
					<button class="action-button" data-copy="hello@karinatovar.com">
						<span>Email Me</span>
					</button>
					<a
						class="action-link"
						href={bookingLink}
						target="_blank"
						rel="noopener noreferrer">Book a Call</a
					>
				</div>
			</div>
		</div>
		<div class="column-animation">
			<div class="column-container">
				{
					[column1, column2, column3, column4].map((column, index) => (
						<Image
							src={column}
							alt={`Column ${index + 1}`}
							width={600}
							class="column-image"
						/>
					))
				}
			</div>
		</div>
	</div>
</BaseLayout>

<script>
	document
		.querySelector(".action-button")
		?.addEventListener("click", function (this: HTMLButtonElement) {
			const email = this.dataset.copy!;
			navigator.clipboard.writeText(email).then(() => {
				const originalText = this.querySelector("span")!.textContent;
				this.querySelector("span")!.textContent = "Copied!";
				setTimeout(() => {
					this.querySelector("span")!.textContent = originalText;
				}, 2000);
			});
		});
</script>

<style lang="scss">
	@import "../styles/base/_breakpoints.scss";

	.grid-container {
		display: grid;
		grid-template-columns: repeat(24, 1fr);
		gap: var(--spacing-base);

		max-width: var(--content-narrow-plus);
		width: 100%;
		margin: 0 auto;
		padding: var(--spacing-base);
		box-sizing: border-box;

		@include tablet {
			padding: var(--spacing-base);
			grid-template-columns: repeat(12, 1fr);
		}

		@include mobile {
			padding: var(--spacing-base);
			max-width: 100%;
			overflow-x: hidden;
		}
	}

	.grid-item {
		grid-column: 1 / 16;
		z-index: 1;

		display: flex;
		flex-direction: column;
		gap: var(--spacing-base);

		@include tablet {
			grid-column: 1 / -1;
			width: 100%;
			padding: var(--spacing-base);
		}

		@include mobile {
			padding: 0;

			// Ensure content doesn't overflow
			width: 100%;
			max-width: 100vw;
			overflow-x: hidden;
			box-sizing: border-box;

			// Force all children to respect container width
			* {
				max-width: 100%;
				box-sizing: border-box;
			}
		}
	}

	.top-section {
		display: flex;
		flex-direction: column;
		gap: var(--spacing-base);
	}

	.subtitle h3 {
		margin: var(--spacing-base) 0;
	}

	.secondary-actions {
		display: flex;
		gap: 12px;

		margin: var(--spacing-double) 0;

		.action-button {
			width: 80px;
			span {
				text-align: center;
				border-bottom: 1px solid;
				&:hover {
					border-bottom-color: var(--color-accent) !important;
				}
			}
		}
	}

	ul.list-section {
		display: flex;
		flex-direction: column;

		list-style: none;
		padding: 0;
		margin: 0;

		li {
			display: flex;
			align-items: center;
			gap: var(--spacing-small);
			justify-content: start;

			border-bottom: 1px solid var(--color-border);
			padding: var(--spacing-small) var(--spacing-small);
			transition: all 0.3s ease-in-out;

			&:hover {
				background-color: var(--color-surface);
			}

			a {
				width: 100%;
			}

			a:hover {
				text-decoration: underline;
			}
		}
	}

	.column-animation {
		position: absolute;
		width: 100%;
		max-width: var(--content-narrow-plus);

		@include tablet {
			display: none;
		}

		.column-container {
			display: flex;
			position: relative;
			width: 500px;
			margin-left: calc(100% - 450px);
		}

		.column-image {
			position: absolute;
			top: 0;
			left: 0;
			opacity: 0;
			animation: columnFade 8s steps(1) infinite;

			@for $i from 1 through 4 {
				&:nth-child(#{$i}) {
					animation-delay: #{($i - 1) * 2}s;
				}
			}
		}
	}

	@keyframes columnFade {
		0%,
		24.99% {
			opacity: 1;
		}
		25%,
		100% {
			opacity: 0;
		}
	}

	// Add this to ensure all text content wraps properly
	p,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		word-wrap: break-word;
		overflow-wrap: break-word;
	}
</style>
