---
interface ImpactMetric {
  metric: string;
  value: string;
  description: string;
}

interface Props {
  title?: string;
  metrics: ImpactMetric[];
}

const { title = "Our Impact", metrics } = Astro.props;
---

<div class="neue-container flex flex-col gap-10" data-intersection-observer={true}>
  <h2 class="caramel-text">{title}</h2>
  <div class={`grid gap-5 ${metrics.length === 1 ? 'grid-cols-1' : metrics.length === 2 ? 'grid-cols-2 max-md:grid-cols-1' : 'grid-cols-3 max-lg:grid-cols-2 max-md:grid-cols-1'}`}>
    {
      metrics.map(({ metric, value, description }) => (
        <div class="flex flex-col p-5 rounded-lg border border-border bg-paper transition-all duration-300 hover:bg-surface">
          <span class="font-sans text-base font-semibold text-ink-tertiary">{metric}</span>
          <span class="font-headings text-[clamp(2rem,5vw,2.5rem)] text-ink-secondary -mt-1">{value}</span>
          <span class="text-sm text-ink-secondary -mt-2">{description}</span>
        </div>
      ))
    }
  </div>
</div>
