---
interface MiniShowcase {
  thumbnail: string;
  targetUrl?: string;
  content?: {
    title?: string;
    metadata?: string;
  }[]
}

type Props = MiniShowcase;

const { thumbnail, targetUrl, content } = Astro.props;
---

<div class="content-card">
  {/* If targetUrl is provided, render a link */}
  {targetUrl && <a href={targetUrl} target="_blank" rel="noopener noreferrer" class="content-link">
    <span>view</span>
    <div class="thumbnail">
      <img src={thumbnail} alt={content?.[0]?.title || ''} loading="lazy" />
    </div>
  </a>}

  {/* If targetUrl is not provided, render a div */}
  {!targetUrl && <div class="content-link">
    <div class="thumbnail">
      <img src={thumbnail} alt={content?.[0]?.title || ''} loading="lazy" />
    </div>
  </div>}


  {content && content.length > 0 && 
    <div class="content-card--details">
      <span class="title">{content[0]?.title}</span>
      <span class="metadata">{content[0]?.metadata}</span>
    </div>
  }
</div>

<style lang="scss">
  .content-card {
    display: flex;
    flex-direction: column;
    border-radius: var(--border-radius-base);
    overflow: hidden;
    background-color: var(--color-surface);
    padding: var(--spacing-base);
    min-height: 500px;
    transition: all .3s ease-in-out;

    &:hover {
      .thumbnail {
        transform: scale(1.1);
        img {
          border-radius: 0px;
          transition-delay: .3s;
        }
      }

      .content-card--details {
        .metadata {
          opacity: 1;
        }
      }
    }
  }

  .content-link {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    position: relative;
  }

  .content-link span {
    opacity: 0;
    position: absolute;
    top: 0;
    right: 0;
    background-color: var(--color-surface);
    padding: 0.25rem 0.5rem;
    border-radius: 9999px;
    color: var(--color-ink-tertiary);
    font-size: var(--font-size-xsmall);
    text-transform: uppercase;
    font-family: var(--font-sans);
    font-weight: 600;
    letter-spacing: 0.05em;
    transition: opacity .3s ease-in-out;
  }

  .content-link:hover span {
    opacity: 1;
    z-index: 1;
  }

  .thumbnail {
    flex: 1;
    width: 100%;
    transition: transform .3s ease-in-out;
  }

  .thumbnail img {
    width: 100%;
    margin: auto;
    border-radius: var(--border-radius-base);
    overflow: hidden;
    transition: border-radius .3s ease-in-out;
  }

  .content-card--details {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    margin-top: 1rem;

    .title {
      font-family: var(--font-sans);
      font-size: var(--font-size-small);
      font-weight: 600;
      color: var(--color-ink-tertiary);
    }

    .metadata {
      font-size: var(--font-size-xsmall);
      font-family: var(--font-sans);
      font-weight: 500;
      margin-bottom: 0;
      color: var(--color-ink-secondary);
      opacity: 0.75;
      transition: all .3s ease-in-out;
    }
  }
</style> 