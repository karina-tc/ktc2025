---
// Assets
import { Image } from "astro:assets";
import karina from "../../assets/brand/self-card.png";
import outline from "../../assets/brand/self-outline.svg";
import bgCard from "../../assets/backgrounds/bg-card.png";
import label from "../../assets/brand/self-label.svg";
import pattern from "../../assets/brand/self-pattern.svg";
import tags from "../../assets/brand/self-tags.svg";
---

<figure class="trading-card">
  <div class="trading-card-tags">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="524"
      height="454"
      fill="none"
    >
      <text
        xml:space="preserve"
        fill="var(--color-ink)"
        font-family="var(--font-headings)"
        font-size="18"
        letter-spacing="0"
        style="white-space:pre"
        ><tspan x=".138" y="132.65">Connection</tspan></text
      >
      <path
        fill="var(--color-ink)"
        fill-rule="evenodd"
        d="M89.462 128.068c6.878-5.78 15.921-9.052 23.745-8.407 4.082.336 7.817 1.736 10.754 4.383 2.936 2.645 5.111 6.569 6.019 12.018 1.255 7.527 3.022 15.845 9.373 20.925 1.643 1.314 3.924 2.956 6.332 3.921 2.402.962 5.044 1.292 7.293-.208a.5.5 0 1 0-.555-.832c-1.846 1.231-4.091 1.023-6.366.111-2.269-.908-4.458-2.476-6.079-3.772-6.014-4.812-7.75-12.74-9.011-20.309-.939-5.634-3.206-9.776-6.336-12.597-3.129-2.819-7.083-4.286-11.342-4.637-8.152-.672-17.475 2.736-24.526 8.686l.174-3.316a.5.5 0 1 0-.999-.052l-.236 4.494a.5.5 0 0 0 .473.525l4.494.237a.5.5 0 0 0 .052-.999l-3.259-.171Z"
        clip-rule="evenodd"></path>

      <text
        xml:space="preserve"
        fill="var(--color-ink)"
        font-family="var(--font-headings)"
        font-size="18"
        letter-spacing="0"
        style="white-space:pre"
        ><tspan x="238.466" y="16.65">Happiness</tspan></text
      >
      <path
        fill="var(--color-ink)"
        fill-rule="evenodd"
        d="M271.438 33.395a.5.5 0 0 1 .5.5v4.5a.5.5 0 1 1-1 0v-3.287c-4.092 4.156-7.699 8.355-9.195 12.72-.794 2.315-.988 4.668-.346 7.088.644 2.424 2.138 4.954 4.786 7.603 1.951 1.95 4.724 4.886 6.337 8.022.808 1.57 1.345 3.227 1.317 4.86-.029 1.65-.634 3.24-2.045 4.651a.5.5 0 0 1-.707-.707c1.227-1.228 1.728-2.572 1.752-3.962.024-1.408-.44-2.896-1.206-4.385-1.535-2.983-4.205-5.822-6.155-7.772-2.739-2.74-4.346-5.418-5.045-8.053-.701-2.64-.481-5.197.366-7.67 1.577-4.599 5.339-8.945 9.44-13.108h-3.299a.5.5 0 0 1 0-1h4.5Z"
        clip-rule="evenodd"></path>

      <text
        xml:space="preserve"
        fill="var(--color-ink)"
        font-family="var(--font-headings)"
        font-size="18"
        letter-spacing="0"
        style="white-space:pre"
        ><tspan x="480.077" y="241.65">Safety</tspan></text
      >
      <path
        fill="var(--color-ink)"
        fill-rule="evenodd"
        d="M435.386 226.354c-3.699-.366-7.446.216-11.87 1.985-7.807 3.123-17.457 8.509-22.097 15.648a.499.499 0 1 1-.838-.545c4.818-7.412 14.719-12.893 22.564-16.031 4.543-1.818 8.453-2.436 12.339-2.052 3.878.384 7.696 1.764 12.058 3.884 6.31 3.067 12.669 6.126 19.524 6.462l-2.298-2.298a.5.5 0 0 1 .707-.707l3.182 3.182a.499.499 0 0 1 0 .707l-3.182 3.182a.5.5 0 0 1-.707-.707l2.355-2.355c-7.141-.322-13.714-3.502-20.018-6.567-4.317-2.098-8.012-3.421-11.719-3.788Z"
        clip-rule="evenodd"></path>

      <text
        xml:space="preserve"
        fill="var(--color-ink)"
        font-family="var(--font-headings)"
        font-size="18"
        letter-spacing="0"
        style="white-space:pre"
        ><tspan x="468.887" y="417.117">Growth</tspan></text
      >
      <path
        fill="var(--color-ink)"
        fill-rule="evenodd"
        d="M421.5 368.75a.5.5 0 0 1 .5-.5c7.755 0 13.179 6.403 16.738 12.504 2.191 3.755 3.034 7.739 3.333 11.784.207 2.789.155 5.64.104 8.467-.022 1.252-.045 2.499-.045 3.734 0 1.884.841 3.273 2.226 4.326 1.404 1.067 3.365 1.783 5.554 2.253 3.809.819 8.153.869 11.08.868l-2.33-2.33a.5.5 0 0 1 .707-.707l3.182 3.182a.5.5 0 0 1 0 .707l-3.182 3.182a.5.5 0 0 1-.707-.707l2.327-2.327c-2.93.001-7.373-.048-11.288-.89-2.25-.484-4.375-1.239-5.949-2.435-1.593-1.212-2.62-2.879-2.62-5.122 0-1.275.023-2.544.046-3.807.051-2.804.101-5.578-.102-8.32-.293-3.956-1.112-7.775-3.199-11.354-3.545-6.078-8.712-12.008-15.875-12.008a.5.5 0 0 1-.5-.5Z"
        clip-rule="evenodd"></path>

      <text
        xml:space="preserve"
        fill="var(--color-ink)"
        font-family="var(--font-headings)"
        font-size="18"
        letter-spacing="0"
        style="white-space:pre"
        ><tspan x="29.198" y="446.927">Security</tspan></text
      >
      <path
        fill="var(--color-ink)"
        fill-rule="evenodd"
        d="M114.022 415.511c-8.593-4.186-21.496-4.197-30.454-.863-2.718 1.011-6.774 2.92-10.14 5.455-2.933 2.209-5.237 4.813-5.808 7.637l2.192-2.192a.5.5 0 0 1 .707.707l-3.182 3.182a.5.5 0 0 1-.707 0l-3.182-3.182a.5.5 0 1 1 .707-.707l2.411 2.411c.496-3.374 3.162-6.322 6.26-8.655 3.466-2.61 7.615-4.56 10.394-5.594 9.174-3.413 22.365-3.422 31.24.902 8.873 4.323 17.797 5.112 26.147.937a.5.5 0 0 1 .447.895c-8.696 4.348-17.956 3.489-27.032-.933Z"
        clip-rule="evenodd"></path>
    </svg>
  </div>
  <div id="tradingCard" class="trading-card-core">
    <div class="card-shine"></div>
    <div class="outline">
      <Image
        src={outline}
        alt="Outline"
        draggable={false}
        loading="lazy"
        decoding="async"
      />
    </div>
    <Image
      class="self clone"
      src={karina}
      alt="Karina"
      draggable={false}
      loading="lazy"
      decoding="async"
    />
    <Image
      class="self"
      src={karina}
      alt="Karina"
      draggable={false}
      loading="lazy"
      decoding="async"
    />
    <div class="trading-card-stats">
      <Image
        src={label}
        alt="Label"
        draggable={false}
        loading="lazy"
        decoding="async"
      />
    </div>
    <div class="pattern">
      <Image
        src={pattern}
        alt="Pattern"
        draggable={false}
        loading="lazy"
        decoding="async"
      />
    </div>
  </div>
  <figcaption>
    <span class="hint">Hover over me</span>
    <div class="details">
      <div class="detail">
        <span>Experience:</span>
        <span>10 years</span>
      </div>
      <div class="detail">
        <span>Level:</span>
        <span>Super IC</span>
      </div>
      <div class="detail">
        <span>Superpower:</span>
        <span>Human Focus</span>
      </div>
    </div>
  </figcaption>
</figure>

<style define:vars={{ bgCardUrl: `url(${bgCard.src})`, bgCardColor: "#4878D1" }}
>
  .trading-card {
    position: relative;
    width: 100%;
    max-width: fit-content;
    height: 100%;
    margin: 0 auto;
    min-height: 500px;
    padding: var(--spacing-base);

    display: flex;
    flex-direction: column;
    gap: var(--spacing-small);
    justify-content: center;
    align-items: center;

    &:hover {
      .trading-card-tags svg path,
      .trading-card-tags svg text {
        fill: var(--color-accent);
        opacity: 0.5;
      }
      .trading-card-core {
        border-radius: 12px;

        .self {
          filter: drop-shadow(0 2px 10px rgba(114, 93, 93, 0.8));
        }

        .self.clone {
          opacity: 0.5;
          mix-blend-mode: multiply;
        }
      }

      figcaption .details {
        top: 0px;
        opacity: 1;
        visibility: visible;
      }
    }
    figcaption {
      width: 100%;
      height: fit-content;
      position: relative;
      font-family: var(--font-sans);

      & .hint {
        display: inline-block;
        width: 100%;
        font-size: 10px;
        text-transform: uppercase;
        text-align: center;
        letter-spacing: 0.1em;
        font-weight: 600;
        opacity: 0.5;
      }

      .details {
        visibility: hidden;
        pointer-events: none;
        position: absolute;
        width: 100%;
        top: 80px;
        opacity: 0;
        z-index: 10;
        transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
      }

      & .detail {
        width: 100%;

        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: var(--spacing-small);
        font-weight: 600;
        border: 2px solid var(--color-paper);
        font-size: 14px;
        background-color: var(--color-surface);

        &:not(:first-child) {
          border-top: none;
        }
      }
    }

    .card-shine {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        125deg,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.1) 30%,
        rgba(255, 255, 255, 0.3) 50%,
        rgba(255, 255, 255, 0.1) 70%,
        rgba(255, 255, 255, 0) 100%
      );
      pointer-events: none;
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 2;
    }

    .trading-card-tags {
      position: absolute;
      top: -10%;
      left: -255;
      width: 524px;
      height: 100%;
      z-index: 1;

      display: flex;
      justify-content: center;
      align-items: center;
      pointer-events: none;
      svg {
        width: 100%;
        object-fit: contain;
        height: auto;
        display: block;
        transition: all 0.3s ease;
      }
    }

    .trading-card-core {
      position: relative;
      width: 100%;
      max-width: 340px;
      height: 450px;
      overflow: hidden;
      cursor: pointer;
      border-radius: 160px 160px 0 0;

      display: flex;
      justify-content: center;
      align-items: end;

      transform-style: preserve-3d;
      transform: perspective(1000px);
      transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);

      background-image: var(--bgCardUrl);
      background-repeat: no-repeat;
      background-position: center center;
      background-size: cover;
      filter: drop-shadow(0 0 10px rgba(145, 123, 123, 0.5));
      border: 1px solid var(--color-surface);

      &:hover {
        border: 4px solid var(--color-surface);
        .trading-card-stats {
          bottom: 0;
          opacity: 1;
        }

        .pattern {
          opacity: 0.4;
        }
      }
    }

    .outline,
    .pattern {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 100%;

      display: flex;
      justify-content: center;
      align-items: end;
    }

    .outline {
      z-index: 2;
    }

    .pattern {
      mix-blend-mode: color-burn;
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 0;
    }

    img {
      width: 100%;
      height: auto;
      margin: 0 auto;
    }

    .self {
      z-index: 1;
      position: relative;
      mix-blend-mode: overlay;
      filter: drop-shadow(0 2px 10px rgba(145, 123, 123, 0.8));
      transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);

      &.clone {
        position: absolute;
        bottom: 0;
        left: 0;
        opacity: 0;
      }
    }

    .trading-card-stats {
      position: absolute;
      bottom: -80px;
      left: 0;
      width: 100%;
      padding: 8px 16px;
      z-index: 2;

      opacity: 0;
      transition: all 0.3s ease;

      display: flex;
      justify-content: center;
      align-items: center;

      img {
        width: 80%;
        height: auto;
      }
    }
  }
</style>

<script>
  (() => {
    console.log("Script starting");
    const card = document.getElementById("tradingCard");
    console.log("Card element:", card);
    if (!card) return;
    const shine = card.querySelector(".card-shine") as HTMLElement;
    console.log("Shine element:", shine);
    if (!shine) return;

    const handleMove = (e: MouseEvent | Touch) => {
      console.log("Mouse move detected", e.clientX, e.clientY);
      const rect = card.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;

      const centerX = rect.width / 2;
      const centerY = rect.height / 2;
      const rotateY = ((x - centerX) / centerX) * MAX_ROTATION;
      const rotateX = -((y - centerY) / centerY) * MAX_ROTATION;

      card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;

      const percentX = (x / rect.width) * 100;
      const percentY = (y / rect.height) * 100;
      shine.style.opacity = MAX_SHINE_OPACITY.toString();
      shine.style.backgroundPosition = `${percentX}% ${percentY}%`;
    };

    const MAX_ROTATION = 8;
    const MAX_SHINE_OPACITY = 0.85;

    card.addEventListener("mousemove", (e) => handleMove(e));
    card.addEventListener("mouseleave", () => {
      card.style.transform = "perspective(1000px) rotateX(0deg) rotateY(0deg)";
      shine.style.opacity = "0";
    });
    card.addEventListener("touchmove", (e) => {
      e.preventDefault();
      handleMove(e.touches[0]);
    });
  })();
</script>
