---
// Components
import BaseLayout from "../layouts/BaseLayout.astro";
import Subtitle from "../components/Subtitle.astro";

// Assets
import { Image } from "astro:assets";
import hand from "../assets/illustrations/hand.svg";
import sheet from "../assets/illustrations/sheet.svg";
import scribble from "../assets/illustrations/scribble.svg";
import flower from "../assets/illustrations/flower.svg";
import karina from "../assets/brand/karina-large.png";

// Data
const bookingLink = "https://cal.com/karina-tovar/quick-chat";

const navItems = [
	{
		icon: hand,
		alt: "Hand",
		text: "Read philosophy manifesto",
		href: "#",
		type: "button",
		data: "philosophy-manifesto",
	},
	{
		icon: scribble,
		alt: "Scribble",
		text: "Look at my most recent work",
		href: "/work",
		type: "link",
	},
	{
		icon: flower,
		alt: "Flower",
		text: "Learn about me",
		href: "/about",
		type: "link",
	},
	{
		icon: sheet,
		alt: "Sheet",
		text: "Read my posts and notes",
		href: "/blog",
		type: "link",
	},
];
---

<BaseLayout
	title="Karina Tovar"
	description="Karina Tovar is a Lead Product Designer."
>
	<div class="w-full p-10 md:py-20" data-intersection-observer={true}>
		<div class="container mx-auto flex flex-col-reverse md:flex-row gap-4">
			<div class="flex-1 md:max-w-3xl flex flex-col gap-4 md:justify-between">
				<h4>Karina Tovar</h4>
				<h1 class="mt-4">Pixel Philosopher Cautious Technologist</h1>
				<p class="md:max-w-xl mt-4">
					My motivation is to build products that aim to help people have
					happier days. Life is too short to be ruined by awful experiences.
					Every product needs to be crafted for human joy.
				</p>
				<Subtitle title="Get Started" />
				<ul class="list-section" data-intersection-observer={true}>
					{
						navItems.map(({ icon, alt, text, href, type, data }) => (
							<li>
								<Image src={icon} alt={alt} />
								{type === "link" ? (
									<a href={href}>{text}</a>
								) : (
									<button data-philosophy>
										<span>{text}</span>
									</button>
								)}
							</li>
						))
					}
				</ul>
			</div>
			<div class="flex-1 flex justify-start md:justify-center items-center max-md:mb-10">
				<a
					class="philosophy-holder w-full max-w-md md:h-full h-[500px] max-w-400px"
					href="/philosophy">
					<div class="philosophy-image w-full h-full mix-blend-overlay flex justify-end items-end">
						<Image src={karina} alt="Karina" class="object-contain md:min-w-[700px] md:translate-x-[300px]" />
					</div>
				</a>
			</div>
		</div>
	</div>
</BaseLayout>

<script>
	// Find all philosophy buttons and attach click handlers
	document.querySelectorAll("[data-philosophy]").forEach((button) => {
		button.addEventListener("click", () => {
			// Get reader name from session if it exists
			const reader = sessionStorage.getItem("reader");
			const baseUrl = "/philosophy?referrer=index";

			// Add reader parameter if it exists
			const url = reader
				? `${baseUrl}&reader=${encodeURIComponent(reader)}`
				: baseUrl;

			window.location.href = url;
		});
	});
</script>

<style lang="scss">
	// Breakpoint mixins
	@import "../styles/base/_breakpoints.scss";

	// Navigation list
	.list-section {
		display: flex;
		flex-direction: column;
		list-style: none;
		padding: 0;

		li {
			display: flex;
			align-items: center;
			gap: var(--spacing-small);
			padding: var(--spacing-small);
			border-bottom: 1px solid var(--color-border);
			transition: background-color 0.2s ease;

			&:hover {
				background-color: var(--color-surface);
			}

			img {
				width: 40px;
				height: 40px;
			}

			a {
				color: var(--color-text);
				text-decoration: none;
				width: 100%;
				height: 24px;
				margin-top: -2px;

				&:hover {
					text-decoration: underline;
				}
			}

			button {
				width: 100%;
				height: 24px;
				padding: 0;
				margin-top: 1px;
				text-align: left;

				&:hover span {
					text-decoration: underline 1px;
					text-underline-offset: 4px;
				}
			}
		}
	}

	// Secondary actions
	.secondary-actions {
		display: flex;
		gap: var(--spacing-base);
		margin-top: var(--spacing-base);

		.action-button {
			background: none;
			border: none;
			padding: 0;
			cursor: pointer;
			font-family: inherit;
			color: var(--color-text);
			margin-top: -1px;

			span {
				border-bottom: 1px solid;

				&:hover {
					border-color: var(--color-accent);
				}
			}
		}
	}

	// Visual section
	.philosophy-holder {
		overflow: hidden;
		position: relative;
		display: flex;
		justify-content: center;
		align-items: end;

		border-radius: 300px 300px 0 0;
		animation: slideUp 1s ease-in-out;
		background: url(../assets/backgrounds/bg04.png) no-repeat center center;
		background-size: cover;
		transition: all 0.3s ease-in-out;

		&.full-screen {
			max-height: none;
			max-width: none;
			position: fixed;
			margin: 0;
			border-radius: 0;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			z-index: 200;
			background-image: none;
			background-color: var(--color-surface);

			.philosophy-image {
				max-width: 600px;
				margin: 0;
				transform: none;
				animation: slideUp 1s ease-in-out;
			}
		}
	}

	// Animation
	@keyframes columnFade {
		0%,
		24.99% {
			opacity: 1;
		}
		25%,
		100% {
			opacity: 0;
		}
	}

	.manifesto-dialog {
		padding: var(--spacing-base);
		border: none;
		max-width: 32rem;
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		// Reset default dialog margins and positioning
		margin: 0;
		padding: var(--spacing-base);

		&::backdrop {
			background: transparent;
		}

		@include mobile {
			top: auto;
			bottom: 0;
			left: 0;
			right: 0;
			width: 100%;
			max-width: 100%;
			transform: none;
			border-radius: 12px 12px 0 0;
			animation: slideUp 0.3s ease-out;
		}

		form {
			display: flex;
			flex-direction: column;
			gap: var(--spacing-base);
		}

		button {
			align-self: flex-end;
			padding: var(--spacing-small) var(--spacing-base);
			background: var(--color-surface);
			border: 1px solid var(--color-border);
			border-radius: 4px;

			&:hover {
				background: var(--color-surface-hover);
			}
		}
	}

	@keyframes slideUp {
		from {
			transform: translateY(100%);
		}
		to {
			transform: translateY(0);
		}
	}
</style>
