---
import { Image } from "astro:assets";
import Subtitle from "../Subtitle.astro";

const skillsItems = [
  {
    title: "Full-Stack Product Builder",
    description:
      "I have worn every R&D hat though my career. Product Manager, Designer, and now curious front-end developer.",
  },
  {
    title: "Strategic Business Partner",
    description:
      "I once was part of a team of 2 in a startup where I learned the meaning of truly acting like an owner. I know the pains of low MRRs and high churn.",
  },
  {
    title: "Systems Thinker",
    description:
      "I've worked for startups of all sizes across many categories. Specializing in technical and complex products.",
  },
  {
    title: "Designer Super IC",
    description:
      "I will never not want to touch pixels. Design is my new art tool, but I have often been placed in positions of leadership to upskill teams.",
  },
];
---

<section class="skills-section">
  <Subtitle title="Some of My Skills" />
  <div class="skills-list">
    {
      skillsItems.map(({ title, description }, index) => (
        <div class={`skill-item ${index === 0 ? "active" : ""}`} data-skill-item>
          <div class="top-corners">
            <span class="left" />
            <span class="right" />
          </div>
          <h3>{title}</h3>
          <p>{description}</p>
          <div class="bottom-corners">
            <span class="left" />
            <span class="right" />
          </div>
        </div>
      ))
    }
  </div>
</section>

<script>
  // Get all skill items
  const skillItems = document.querySelectorAll('[data-skill-item]');
  const skillsList = document.querySelector('.skills-list');
  const firstSkill = skillItems[0];

  // Add hover listeners to all items except the first one
  skillItems.forEach((item, index) => {
    if (index !== 0) {
      item.addEventListener("mouseenter", () => {
        firstSkill.classList.remove("active");
      });

      item.addEventListener("mouseleave", () => {
        // Only add active class back if no other items are being hovered
        const isAnyHovered = Array.from(skillItems).some((item, i) => {
          return i !== 0 && item.matches(":hover");
        });

        if (!isAnyHovered) {
          // Check if we're actually hovering a skill item, not just the container
          const isHoveringSkillItem = Array.from(skillItems).some(item => 
            item.matches(":hover")
          );
          
          if (isHoveringSkillItem) {
            firstSkill.classList.add("active");
          }
        }
      });
    }
  });

  // Add mouseleave listener to the container
  skillsList?.addEventListener("mouseleave", () => {
    firstSkill.classList.add("active");
  });
</script>

<style lang="scss">
  .skills-list {
    margin-top: var(--spacing-double);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-double);
  }

  .skill-item {
    position: relative;
    padding: 2rem;
    background: var(--color-paper);
    border: 2px solid var(--color-coffee);
    cursor: pointer;
    transition: all 0.2s ease-in-out;

    h3 {
      margin: 0;
      font-family: var(--font-headings);
      font-size: 1.5rem;
      color: var(--color-chocolate);
      margin-bottom: var(--spacing-base);
    }

    p {
      margin: 0;
    }

    .top-corners,
    .bottom-corners {
      position: absolute;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: space-between;
      pointer-events: none;

      span {
        position: relative;
        width: 20px;
        height: 20px;
        background: var(--color-paper);
        border: 2px solid var(--color-coffee);
        transition: all 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55);

        &.left {
          margin-left: -2px;
        }

        &.right {
          margin-right: -2px;
        }
      }
    }

    .top-corners {
      top: 0;

      span {
        margin-top: -2px;
      }
    }

    .bottom-corners {
      top: calc(100% - 20px);

      span {
        margin-top: 2px;
      }
    }

    &:hover,
    &.active {
      color: var(--color-paper);
      background: var(--color-chocolate);

      h3 {
        color: var(--color-paper);
      }

      .top-corners {
        margin-top: -5px;
      }

      .bottom-corners {
        margin-top: 5px;
      }

      .top-corners,
      .bottom-corners {
        span {
          background: var(--color-coffee);
          transform: scale(1.2);
          border: 0px;

          &.left {
            margin-left: -10px;
          }

          &.right {
            margin-right: -10px;
          }
        }
      }
    }
  }
</style>
