---
import { Image } from "astro:assets";

// Icons
import Bookmark from "../assets/icons/bookmark.svg";
import Briefcase from "../assets/icons/briefcase.svg";
import CaretLeft from "../assets/icons/caretleft.svg";
import CaretRight from "../assets/icons/caretright.svg";

// Types
interface Props {
  include_classes?: string;
  quote: {
    title: string;
    content: string;
  };
  author: {
    name: string;
    image: ImageMetadata;
    currentRole: string;
    pastRole: string;
    pastCompany: string;
  };
  reference: {
    number: string;
    link?: string;
  };
  "data-index"?: number;
  totalTestimonials?: number;
  allTestimonials: Array<{
    quote: { title: string; content: string };
    author: {
      name: string;
      image: ImageMetadata;
      currentRole: string;
      pastRole: string;
      pastCompany: string;
    };
    reference: { number: string; link?: string };
  }>;
}

// Generate special ability based on quote title
const getSpecialAbility = (title: string) => {
  const abilities: { [key: string]: string } = {
    "Strategic Builder": "PM SHAPESHIFTING",
    "Can Do it All": "ULTRA ADAPTABILITY",
    "Super Fast": "SPEED MASTERY",
    "Deep Understanding": "USER INSIGHT",
    "Technical Prowess": "CODE WIZARDRY",
    "Action Oriented": "RAPID EXECUTION",
  };
  return abilities[title] || "SUPER POWER";
};

const { quote, author, reference, include_classes = "", "data-index": index, totalTestimonials = 1, allTestimonials } = Astro.props;
---

<div class:list={["testimonial-item", include_classes]} data-index={index}>
  <div class="testimonial-header">
    <div class="testimonial-reference">
      <span>{reference.number}</span>
      {
        reference.link && (
          <a href={reference.link} target="_blank" rel="noopener noreferrer">
            View
          </a>
        )
      }
    </div>
    <div class="testimonial-title">
      <h2>{quote.title}</h2>
    </div>
  </div>
  <div class="testimonial-holes">
    <div class="testimonial-hole left"></div>
    <div class="testimonial-hole right"></div>
  </div>
  <div class="testimonial-quote">
    <p>{quote.content}</p>
    <div class="testimonial-author">
      <Image src={author.image} alt={author.name} width={60} height={60} />
      <div class="testimonial-author-info">
        <p>{author.name}</p>
        <span class="testimonial-author-role">
          <p>{author.currentRole}</p>
          <p>{author.pastRole}</p>
        </span>
      </div>
    </div>
  </div>
  <div class="testimonial-special-ability">
    <div class="block">
      <Image src={Bookmark} alt="Bookmark" width={20} height={20} />
      SUPERPOWER: {getSpecialAbility(quote.title)}
    </div>
    <div class="block">
      <Image src={Briefcase} alt="Briefcase" width={20} height={20} />
      <a href="/resume" target="_blank">{author.pastCompany}</a>
    </div>
    <button type="button" aria-label="Previous" class="block arrow left">
      <Image src={CaretLeft} alt="Caret Left" width={20} height={20} />
    </button>
    <button type="button" aria-label="Next" class="block arrow right">
      <Image src={CaretRight} alt="Caret Right" width={20} height={20} />
    </button>
  </div>
</div>

<script define:vars={{ allTestimonials }}>
  class TestimonialCarousel {
    constructor() {
      this.currentIndex = 0;
      this.card = document.querySelector('.testimonial-item');
      this.testimonials = allTestimonials;
      
      const prevButton = this.card?.querySelector('.arrow.left');
      const nextButton = this.card?.querySelector('.arrow.right');
      
      prevButton?.addEventListener('click', () => this.navigate('prev'));
      nextButton?.addEventListener('click', () => this.navigate('next'));
    }

    navigate(direction) {
      if (!this.card) return;

      // Remove flip class first
      this.card.classList.remove('flip');
      
      // Add flip class back
      setTimeout(() => {
        this.card.classList.add('flip');
      }, 400);
      
      // Update content after small delay
      setTimeout(() => {
        this.currentIndex = direction === 'next' 
          ? (this.currentIndex + 1) % this.testimonials.length
          : (this.currentIndex - 1 + this.testimonials.length) % this.testimonials.length;

        const nextTestimonial = this.testimonials[this.currentIndex];
        this.updateContent(nextTestimonial);
      }, 300);
    }

    updateContent(testimonial) {
      if (!this.card) return;

      // Update reference
      const reference = this.card.querySelector('.testimonial-reference');
      if (reference) {
        reference.querySelector('span').textContent = testimonial.reference.number;
        const link = reference.querySelector('a');
        if (link && testimonial.reference.link) {
          link.href = testimonial.reference.link;
        }
      }

      // Update title
      const title = this.card.querySelector('.testimonial-title h2');
      if (title) {
        title.textContent = testimonial.quote.title;
      }

      // Update quote
      const quote = this.card.querySelector('.testimonial-quote > p');
      if (quote) {
        quote.textContent = testimonial.quote.content;
      }

      // Update author
      const authorName = this.card.querySelector('.testimonial-author-info > p');
      const authorImage = this.card.querySelector('.testimonial-author img');
      const authorCurrentRole = this.card.querySelector('.testimonial-author-role p:first-child');
      const authorPastRole = this.card.querySelector('.testimonial-author-role p:last-child');
      
      if (authorName) authorName.textContent = testimonial.author.name;
      if (authorImage) authorImage.src = testimonial.author.image.src;
      if (authorCurrentRole) authorCurrentRole.textContent = testimonial.author.currentRole;
      if (authorPastRole) authorPastRole.textContent = testimonial.author.pastRole;

      // Update special ability
      const superpower = this.card.querySelector('.testimonial-special-ability .block:first-child');
      const pastCompany = this.card.querySelector('.testimonial-special-ability .block:nth-child(2)');
      
      if (superpower) {
        const ability = this.getSpecialAbility(testimonial.quote.title);
        superpower.textContent = `SUPERPOWER: ${ability}`;
      }
      
      if (pastCompany) {
        pastCompany.textContent = testimonial.author.pastCompany;
      }
    }

    getSpecialAbility(title) {
      const abilities = {
        "Strategic Builder": "PM SHAPESHIFTING",
        "Can Do it All": "ULTRA ADAPTABILITY",
        "Super Fast": "SPEED MASTERY",
        "Deep Understanding": "USER INSIGHT",
        "Technical Prowess": "CODE WIZARDRY",
        "Action Oriented": "RAPID EXECUTION",
      };
      return abilities[title] || "SUPER POWER";
    }
  }

  new TestimonialCarousel();
</script>

<style lang="scss">
  .testimonial-item {
    display: flex;
    flex-direction: column;
    color: var(--color-ink-secondary);
    background: var(--color-surface);
    border: 6px solid var(--color-paper);
    border-radius: 12px;
    transition: all 0.3s cubic-bezier(0.19, 1, 0.22, 1);
    overflow: hidden;
    position: relative;
    box-shadow: 0px 52px 20px -40px rgba(84, 67, 57, 0.25);

    &.flip {
      .testimonial-header h2 {
        animation: flipTitle 0.3s ease-in-out forwards;
      }
      .testimonial-quote {
        animation: flipQuote 0.3s ease-in-out forwards;
      }
    }

    &.active,
    &:hover {
      box-shadow: 0px 52px 20px -40px rgba(84, 67, 57, 0.5);

      .testimonial-reference span {
        color: var(--color-coffee);
        opacity: 1;
      }

      .testimonial-footer {
        border-top: 1px solid var(--color-coffee);
      }
    }

    &:hover {
      .testimonial-author .testimonial-author-role p {
        &:last-child {
          position: relative;
          opacity: 1;
          top: 0;
          background-color: inherit;
        }
        &:first-child {
          position: absolute;
          top: -10px;
          left: 0;
          opacity: 0;
        }
      }
    }

    .testimonial-header {
      display: flex;
      flex-direction: column;
      padding: var(--spacing-base) var(--spacing-double) 0;
      border-bottom: 1px dashed var(--color-coffee);
      transition: all 0.3s ease-in-out;

      .testimonial-reference {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: var(--font-size-small);
        font-family: var(--font-sans);
        backface-visibility: hidden;

        span {
          text-transform: uppercase;
          letter-spacing: 0.05em;
          font-weight: 800;
          opacity: 0.75;
          transition: all 0.2s ease-in-out;
        }

        a {
          font-weight: 500;
          padding: var(--spacing-small);
          text-underline-offset: 4px !important;

          &:hover {
            text-decoration: underline;
            text-underline-offset: 2px;
            text-decoration-color: inherit;
          }
        }
      }

      .testimonial-title {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        backface-visibility: hidden;

        h2 {
          font-family: var(--font-headings);
          font-size: var(--font-size-massive);
          color: var(--color-coffee);
          margin-bottom: var(--spacing-base);
          padding-bottom: var(--spacing-small);
          transition: all 0.3s ease-in-out;
          opacity: 0;
        }
      }
    }

    .testimonial-holes {
      display: flex;
      justify-content: space-between;
      align-items: center;
      overflow: hidden;

      position: absolute;
      width: calc(100% + 40px);
      left: -20px;
      top: 110px;

      .testimonial-hole {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: var(--color-paper);
      }
    }

    .testimonial-quote {
      flex-grow: 1;
      display: flex;
      gap: var(--spacing-base);
      flex-direction: column;
      padding: var(--spacing-base) var(--spacing-double);
      opacity: 0;
      transition: all 0.3s ease-in-out;
      p {
        margin-top: var(--spacing-small);
        font-family: var(--font-sans);
      }
    }

    .testimonial-author {
      display: flex;
      align-items: center;
      padding: var(--spacing-small) 0;
      gap: var(--spacing-base);

      img {
        border-radius: 20px;
        width: 60px;
        height: 60px;
        object-fit: cover;
        border: 2px solid rgba(255, 255, 255, 0.25);
      }
    }

    .testimonial-author-info {
      display: flex;
      flex-direction: column;

      p {
        font-weight: 500;
        margin: 0;
      }

      .testimonial-author-role {
        display: flex / inline-block;
        width: 100%;
        margin: -4px 0 0;
        overflow: hidden;
        flex-direction: column;
        gap: var(--spacing-xsmall);
        position: relative;
        overflow: hidden;

        font-size: var(--font-size-small);
        font-family: var(--font-sans);

        p {
          margin: 0;
          transition: all 0.2s ease-in-out;

          &:first-child {
            position: relative;
            top: 0;
            background-color: inherit;
          }

          &:last-child {
            position: absolute;
            top: 10px;
            left: 0;
            opacity: 0;
            color: var(--color-ink-tertiary);
          }
        }
      }
    }

    .testimonial-special-ability {
      display: flex;
      align-items: center;

      font-size: var(--font-size-small);
      font-family: var(--font-mono);
      color: var(--color-ink-tertiary);
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.05em;

      margin: var(--spacing-small) 0 -2px;
      border-top: 1px solid var(--color-border);
      background: var(--color-paper);
      transition: all 0.2s ease-in-out;

      @include tablet {
        margin: var(--spacing-small) 0 -6px;
      }

      .block {
        display: inline-flex;
        align-items: center;
        justify-content: start;
        gap: var(--spacing-small);
        padding: 12px var(--spacing-base);
        border-right: 1px solid var(--color-border);

        &:not(.arrow) {
          flex-grow: 1;
        }

        a {
          text-decoration: underline;
          text-underline-offset: 4px;
          text-decoration-color: var(--color-coffee);

          &:hover {
            text-decoration-color: var(--color-accent);
          }
        }

        &.arrow {
          padding: 12px;
          text-align: center;
          cursor: pointer;
          transition: background-color 0.2s ease-in-out;

          &:hover {
            background-color: var(--color-border);
          }
        }

        &:last-child {
          border-right: none;
        }
      }

      @include tablet {
        flex-direction: column;
        align-items: start;

        .block {
          width: 100%;
          border-right: none;
          border-bottom: 1px solid var(--color-border);

          &:last-child {
            border-bottom: none;
          }

          &.arrow {
            display: none !important;
          }
        }
      }
    }

    @include desktop {
      .testimonial-special-ability {
        .block.arrow {
          display: inline-flex;
          cursor: pointer;
          transition: background-color 0.2s ease-in-out;

          &:hover {
            background-color: var(--color-border);
          }
        }
      }
    }

    @include desktop {
      &.active {
        display: block !important;
      }
      &:not(.active) {
        display: none !important;
      }
    }
  }

  @keyframes flipTitle {
    0% {
      color: var(--color-coffee);
      opacity: 0;
    }
    50% {
      color: var(--color-coffee);
      opacity: .5;
    }
    100% {
      color: var(--color-ink);
      opacity: 1;
    }
  }

  @keyframes flipQuote {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>
