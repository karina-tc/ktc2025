---
// Styles
import "../styles/main.scss";

// Components
import CommonHead from "../components/CommonHead.astro";
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";
import { SEO } from "astro-seo";

// Props
interface Props {
	title: string;
	description: string;
	includeNavigation?: boolean;
	includeFooter?: boolean;
}

const {
	title,
	description,
	includeNavigation = true,
	includeFooter = true,
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<CommonHead title={title} description={description} />
		<SEO
			title={title}
			description={description}
			openGraph={{
				basic: {
					title,
					type: "website",
					image: "/og-cover.png",
					url: Astro.url.href,
				},
				optional: {
					description,
					siteName: "Karina Tovar",
				},
			}}
			twitter={{
				card: "summary_large_image",
				title,
				description,
				image: "/og-cover.png",
				imageAlt: "Karina Tovar Portfolio Preview"
			}}
			extend={{
				meta: [
					{ name: "author", content: "Karina Tovar" },
				],
				link: [
					{ rel: "canonical", href: Astro.url.href },
				],
			}}
		/>
		
		<!-- Critical styles to prevent flash -->
		<style is:inline>
			/* Critical navigation styles */
			.nav-list {
				display: flex;
				gap: var(--spacing-xsmall);
				list-style: none;
				margin: 0;
				padding: 0;
			}

			.nav-list a {
				text-decoration: none;
				color: var(--color-ink);
				padding: 10px 12px 8px;
				border-radius: 4px;
			}
		</style>
	</head>
	<body>
		{includeNavigation && <Navigation />}
		<main role="main" aria-label="Main Content">
			<slot />
		</main>
		{includeFooter && <Footer />}
	</body>
</html>

<script>
	// Store the current URL before any navigation happens
	document.addEventListener('click', (e) => {
		const target = e.target as HTMLElement;
		const link = target.closest('a');
		
		if (link && !window.location.pathname.includes('404')) {
			console.log('Storing current URL before navigation:', window.location.href);
			sessionStorage.setItem('lastVisitedUrl', window.location.href);
		}
	});

	// Setup Intersection Observer
	import setupIntersectionObserver from "../scripts/intersection-observer";
	setupIntersectionObserver();
</script>
