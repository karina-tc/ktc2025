---
export const prerender = true;

import BaseLayout from "../../layouts/BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogPostNavigation from "../../components/BlogPostNavigation.astro";
import BlogPostImage from "../../components/BlogPostImage.astro";
import BlogPostHeader from "../../components/BlogPostHeader.astro";
import SignatureSection from "../../components/_partials/SignatureSection.astro";
import type { ImageMetadata } from 'astro';

export async function getStaticPaths() {
  const isDev = import.meta.env.PUBLIC_SHOW_DRAFTS;
  
  const posts = await getCollection("blog", ({ data }) => {
    return isDev ? true : data.status === "published";
  });

  console.log('Found posts:', posts.length); // Debug log

  return posts.map((post, index) => {
    console.log('Processing post:', post.slug); // Debug log
    return {
      params: { slug: post.slug },
      props: {
        post,
        prev: index > 0 ? posts[index - 1] : null,
        next: index < posts.length - 1 ? posts[index + 1] : null,
      },
    };
  });
}

interface Props {
  post: CollectionEntry<"blog">;
  prev: CollectionEntry<"blog"> | null;
  next: CollectionEntry<"blog"> | null;
}

const { post, prev, next } = Astro.props;

// Add error handling around render
let Content;
try {
  const rendered = await post.render();
  Content = rendered.Content;
  if (!Content) {
    throw new Error('Content component not found in render result');
  }
} catch (error) {
  console.error('Error rendering post:', error);
  console.error('Post object:', post);
  return new Response('Error rendering blog post', { status: 500 });
}

// Dynamic import based on post slug
let blogImage: ImageMetadata | null = null;
try {
  if (post.data.image) {
    const images = import.meta.glob<{ default: ImageMetadata }>('../../assets/blog/*.{png,jpg,jpeg,webp,avif}');
    const imagePath = `../../assets/blog/${post.data.image}`;
    
    if (images[imagePath]) {
      const imageModule = await images[imagePath]();
      blogImage = imageModule.default;
    } else {
      console.error(`Image not found: ${imagePath}`);
      blogImage = null;
    }
  }
} catch (e) {
  console.error("Image import error:", e);
  blogImage = null;
}
---

<BaseLayout title={post.data.title} description={post.data.description || ""}>
  <section class="neue-container-sm md:text-xl">
    <BlogPostHeader
      title={post.data.title}
      tags={post.data.tags}
      startedDate={post.data.startedDate}
      publishDate={post.data.publishDate}
      status={post.data.status}
    />

    {
      blogImage && (
        <BlogPostImage
          image={blogImage}
          title={post.data.title}
          description={post.data.imageDescription}
        />

        <!-- Spacer -->
        <div class="spacer-small"></div>
      )
    }

    {!blogImage && (
      <!-- Spacer -->
      <div class="spacer-large"></div>
    )}

    <div
      class="blog-post-content"
      data-intersection-observer={true}
      data-threshold="0"
    >
      <article class="prose" role="article" aria-label="Blog Post Content">
        <Content />
      </article>
    </div>
  </section>

  <!-- End of blog post -->
  <section class="neue-container-sm text-2xl md:text-4xl {post.data.category === 'blog' ? 'mt-24' : 'mt-12'}" data-intersection-observer={true}>
    {post.data.category === 'blog' && (
      <p class="caramel-text">El fin. &mdash; byeeee!</p>
    )}
  </section>

  <!-- Navigation -->
  <section class="neue-container-sm">
    <BlogPostNavigation prev={prev} next={next} />

    <SignatureSection />
  </section>
</BaseLayout>
