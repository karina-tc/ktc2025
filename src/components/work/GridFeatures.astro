---
interface Feature {
  title: string;
  description: string;
  isStandout?: boolean;
}

interface Props {
  features: Feature[];
  stackThird?: boolean;
}

const { features, stackThird = false } = Astro.props;
---

<div class={`grid gap-4 ${stackThird ? 'md:grid-cols-2 grid-cols-1' : 'md:grid-cols-3 grid-cols-1'}`}>
  {
    features.map((feature) => (
      <div class={`flex flex-col p-4 text-base rounded-md bg-surface ${
        stackThird && 'md:last:col-span-2 last:col-span-1 last:min-h-[300px] md:last:min-h-0'
      } ${feature.isStandout ? 'bg-ink' : ''}`}>
        <h3 class={`mt-1 ${
          feature.isStandout ? '!text-surface mt-0' : '!text-ink-tertiary'
        }`}>
          {feature.title}
        </h3>
        <hr class={`border ${
          feature.isStandout ? 'border-coffee' : 'border-border'
        } my-4`} />
        <p class={`${feature.isStandout ? '!text-paper' : '!text-ink'} ${
          stackThird && 'last:max-w-[75ch] last:m-0'
        }`}>
          {feature.description}
        </p>
      </div>
    ))
  }
</div>