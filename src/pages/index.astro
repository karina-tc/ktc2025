---
// Components
import BaseLayout from "../layouts/BaseLayout.astro";
import Subtitle from "../components/Subtitle.astro";

// Assets
import { Image } from "astro:assets";
import hand from "../assets/illustrations/hand.svg";
import sheet from "../assets/illustrations/sheet.svg";
import scribble from "../assets/illustrations/scribble.svg";
import flower from "../assets/illustrations/flower.svg";
import column1 from "../assets/artwork/column1.png";
import column2 from "../assets/artwork/column2.png";
import column3 from "../assets/artwork/column3.png";
import column4 from "../assets/artwork/column4.png";

// Data
const bookingLink =
	"https://cal.com/karina-tovar-djofxs/quick-chat?month=2025-01&date=2025-01-28";

const navItems = [
	{
		icon: hand,
		alt: "Hand",
		text: "Read philosophy manifesto",
		href: "#",
		type: "button",
		data: "philosophy-manifesto",
	},
	{
		icon: scribble,
		alt: "Scribble",
		text: "Look at my most recent work",
		href: "/work",
		type: "link",
	},
	{
		icon: flower,
		alt: "Flower",
		text: "Learn about me",
		href: "/about",
		type: "link",
	},
	{
		icon: sheet,
		alt: "Sheet",
		text: "Read my posts and notes",
		href: "/blog",
		type: "link",
	},
];
---

<BaseLayout
	title="Karina Tovar"
	description="Karina Tovar is a Lead Product Designer."
>
	<div class="container">
		<div class="content">
			<div class="text-content">
				<h2>Karina Tovar</h2>
				<h1>Pixel Philosopher Cautious Technologist</h1>
				<p>
					My motivation is to build products that aim to help people have
					happier days. Life is too short to be ruined by awful experiences.
					Every product needs to be crafted for human joy.
				</p>

				<Subtitle title="Get Started" />

				<ul class="list-section">
					{
						navItems.map(({ icon, alt, text, href, type, data }) => (
							<li>
								<Image src={icon} alt={alt} />
								{type === "link" ? (
									<a href={href}>{text}</a>
								) : (
									<button data-dialog="philosophy-manifesto">
										<span>{text}</span>
									</button>
								)}
							</li>
						))
					}
				</ul>
				<dialog id="philosophy-manifesto" class="manifesto-dialog">
					<form method="dialog">
						<h3>Philosophy Manifesto</h3>
						<p>
							Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos.
						</p>
						<button>Close</button>
					</form>
				</dialog>

				<div class="secondary-actions">
					<a class="action-link" href="#">Download CV</a>
					<button class="action-button" data-copy="hello@karinatovar.com">
						<span>Email Me</span>
					</button>
					<a class="action-link" href={bookingLink} target="_blank" rel="noopener noreferrer">
						Book a Call
					</a>
				</div>
			</div>
		</div>

		<div class="visual">
			<div class="column-container">
				{
					[column1, column2, column3, column4].map((column, index) => (
						<Image
							src={column}
							alt={`Column ${index + 1}`}
							width={600}
							class="column-image"
						/>
					))
				}
			</div>
		</div>
	</div>
</BaseLayout>

<script>
	document
		.querySelector(".action-button")
		?.addEventListener("click", function (this: HTMLButtonElement) {
			const email = this.dataset.copy!;
			navigator.clipboard.writeText(email).then(() => {
				const originalText = this.querySelector("span")!.textContent;
				this.querySelector("span")!.textContent = "Copied!";
				setTimeout(() => {
					this.querySelector("span")!.textContent = originalText;
				}, 2000);
			});
		});

	const dialog = document.getElementById('philosophy-manifesto') as HTMLDialogElement;
	const html = document.documentElement;

	if (dialog) {
		dialog.addEventListener('close', () => {
			html.style.overflow = '';
		});

		const openButton = document.querySelector('[data-dialog="philosophy-manifesto"]');
		openButton?.addEventListener('click', () => {
			dialog.showModal();
			html.style.overflow = 'hidden';
		});
	}
</script>

<style lang="scss">
	// Breakpoint mixins
	@import "../styles/base/_breakpoints.scss";

	// Main container
	.container {
		display: grid;
		grid-template-columns: 3fr 2fr;
		gap: var(--spacing-base);
		max-width: var(--content-narrow-plus);
		margin: 0 auto;
		padding: var(--spacing-base);
		position: relative;

		@include tablet {
			grid-template-columns: 1fr;
			padding: var(--spacing-base);
		}

		@include mobile {
			padding: var(--spacing-base);
		}
	}

	// Content area
	.content {
		.text-content {
			display: flex;
			flex-direction: column;
			gap: var(--spacing-base);

			h2 {
				margin-bottom: var(--spacing-base);
			}

			h1 {
				margin-bottom: var(--spacing-small);
			}
		}
	}

	// Navigation list
	.list-section {
		display: flex;
		flex-direction: column;
		list-style: none;
		padding: 0;

		li {
			display: flex;
			align-items: center;
			gap: var(--spacing-small);
			padding: var(--spacing-small);
			border-bottom: 1px solid var(--color-border);
			transition: background-color 0.2s ease;

			&:hover {
				background-color: var(--color-surface);
			}

			img {
				width: 24px;
				height: 24px;
			}

			a {
				color: var(--color-text);
				text-decoration: none;
				width: 100%;
				height: 24px;
				margin-top: -2px;

				&:hover {
					text-decoration: underline;
				}
			}

			button {
				width: 100%;
				height: 24px;
				padding: 0;
				margin-top: 1px;
				text-align: left;

				&:hover span {
					text-decoration: underline 1px;
					text-underline-offset: 4px;
				}
			}
		}
	}

	// Secondary actions
	.secondary-actions {
		display: flex;
		gap: var(--spacing-base);
		margin-top: var(--spacing-base);

		.action-button {
			background: none;
			border: none;
			padding: 0;
			cursor: pointer;
			font-family: inherit;
			color: var(--color-text);
			margin-top: -1px;

			span {
				border-bottom: 1px solid;

				&:hover {
					border-color: var(--color-accent);
				}
			}
		}
	}

	// Visual section
	.visual {
		@include tablet {
			display: none;
		}

		.column-container {
			position: relative;
			width: 500px;
			height: 100%;
		}

		.column-image {
			position: absolute;
			top: 0;
			left: 0;
			opacity: 0;
			animation: columnFade 8s steps(1) infinite;

			@for $i from 1 through 4 {
				&:nth-child(#{$i}) {
					animation-delay: #{($i - 1) * 2}s;
				}
			}
		}
	}

	// Animation
	@keyframes columnFade {
		0%,
		24.99% {
			opacity: 1;
		}
		25%,
		100% {
			opacity: 0;
		}
	}

	.manifesto-dialog {
		padding: var(--spacing-base);
		border: none;
		max-width: 32rem;
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		
		// Reset default dialog margins and positioning
		margin: 0;
		padding: var(--spacing-base);
		
		&::backdrop {
			background: transparent;
			backdrop-filter: blur(4px);
		}

		@include mobile {
			top: auto;
			bottom: 0;
			left: 0;
			right: 0;
			width: 100%;
			max-width: 100%;
			transform: none;
			border-radius: 12px 12px 0 0;
			animation: slideUp 0.3s ease-out;
		}

		form {
			display: flex;
			flex-direction: column;
			gap: var(--spacing-base);
		}

		button {
			align-self: flex-end;
			padding: var(--spacing-small) var(--spacing-base);
			background: var(--color-surface);
			border: 1px solid var(--color-border);
			border-radius: 4px;
			
			&:hover {
				background: var(--color-surface-hover);
			}
		}
	}

	@keyframes slideUp {
		from {
			transform: translateY(100%);
		}
		to {
			transform: translateY(0);
		}
	}
</style>
