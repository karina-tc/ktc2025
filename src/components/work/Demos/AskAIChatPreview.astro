---
import { Image } from "astro:assets";
import aiIconContext from "../../../assets/case-studies/tropic/ask-ai/ai-icon-gen.svg";
import aiIconArrow from "../../../assets/case-studies/tropic/ask-ai/ai-icon-arrow.svg";
import aiIconOptions from "../../../assets/case-studies/tropic/ask-ai/ai-icon-options.svg";
import aiIconNewThread from "../../../assets/case-studies/tropic/ask-ai/ai-icon-thread.svg";
---

<div class="holder relative w-full h-full min-h-full m-auto flex flex-col items-center justify-center">
  <span class="poof min-w-[100px] block italic text-center bg-paper p-2 rounded-[12px_0_12px_12px] text-xs font-medium text-ink absolute top-[calc(50%-12px)] left-[calc(50%-50px)] z-20 opacity-0 border border-white shadow-[0px_10px_10px_-5px_rgba(108,108,108,0.25)] [&.animate]:animate-poof !text-ink">Poof!</span>

  <div class="chat-input w-full max-w-[400px] mx-auto flex flex-col items-center justify-center font-instrument-sans text-sm shadow-md relative mt-auto">
    <!-- Context -->
    <div class="chat-input-context w-full flex flex-row items-center justify-start gap-2 text-xs font-medium text-white bg-[#241065] border border-[#241065] rounded-t-lg p-2 transition-all duration-300 absolute top-5 opacity-0 translate-y-0">
      <Image src={aiIconContext} alt="ai-icon-context" class="w-5 h-5 m-0" />
      <span>General Knowledge</span>
    </div>
    <!-- Form -->
    <div class="chat-input-form w-full flex flex-col items-center justify-center gap-2 bg-white relative border border-[#795cf6] overflow-hidden rounded-lg transition-all duration-300 z-10 [&.active]:rounded-t-none [&.active]:rounded-b-lg">
      <!-- Input -->
      <textarea 
        class="ai-input w-full h-full min-h-[100px] max-h-[100px] resize-none border-0 outline-none font-instrument-sans text-sm leading-[1.6] p-2 caret-[#241065] !text-ink" 
        placeholder="Ask away..."
      ></textarea>
      <!-- Submit -->
      <button 
        class="chat-input-submit w-[52px] h-[52px] flex flex-row items-center justify-center bg-white/50 rounded-full shadow-md absolute bottom-[10px] right-[10px] z-10 cursor-pointer" 
        type="button"
      >
        <div class="submit-icon w-10 h-10 min-w-[40px] min-h-[40px] outline-none bg-black rounded-full flex items-center justify-center transition-all duration-300 hover:bg-[#241065] focus:bg-[#241065] before:content-[''] before:absolute before:top-[calc(50%-24px)] before:left-[calc(50%-24px)] before:w-12 before:h-12 before:bg-transparent before:border-4 before:border-white/50 before:blur-[2px] before:rounded-full before:z-[1]">
          <span class="w-10 h-10 flex items-center justify-center rounded-full overflow-hidden pointer-events-none">
            <Image src={aiIconArrow} alt="ai-icon-arrow" class="w-5 h-5 transition-all duration-300" />
          </span>
        </div>
      </button>
      <!-- Actions -->
      <div class="chat-input-form-actions w-full flex flex-row items-start justify-start p-2 pb-2 gap-2 opacity-50 transition-all duration-300 [&.active]:opacity-100 !text-ink">
        <button type="button" class="max-w-fit flex flex-row items-center justify-center gap-1 mb-1 text-xs font-medium p-1 px-3 bg-[#efefef] rounded-md shadow-inner transition-all duration-300 hover:shadow-inner-md">
          <Image src={aiIconOptions} alt="ai-icon-options" class="w-4 h-4 m-0 max-w-4 max-h-4 min-w-4 min-h-4" />
          <span>Options</span>
        </button>
        <button type="button" class="max-w-fit flex flex-row items-center justify-center gap-1 mb-1 text-xs font-medium p-1 px-3 bg-[#efefef] rounded-md shadow-inner transition-all duration-300 hover:shadow-inner-md">
          <Image src={aiIconNewThread} alt="ai-icon-new-thread" class="w-4 h-4 m-0 max-w-4 max-h-4 min-w-4 min-h-4" />
          <span>New Thread</span>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  const chatInputs = document.querySelectorAll(".chat-input");

  chatInputs.forEach((chatInput) => {
    const textarea = chatInput.querySelector(".ai-input");
    const context = chatInput.querySelector(".chat-input-context");
    const form = chatInput.querySelector(".chat-input-form");
    const actions = chatInput.querySelector(".chat-input-form-actions");
    const submit = chatInput.querySelector(".chat-input-submit");
    const submitIcon = chatInput.querySelector(".submit-icon");
    const poof = document.querySelector(".poof");

    const updateClasses = () => {
      if (!textarea) return;
      const hasValue = (textarea as HTMLTextAreaElement).value.length > 0;

      if (hasValue) {
        context?.classList.add("active");
        actions?.classList.add("active");
        submit?.classList.add("active");
        submitIcon?.classList.add("active");
        form?.classList.add("active");
      } else {
        context?.classList.remove("active");
        actions?.classList.remove("active");
        submit?.classList.remove("active");
        submit?.classList.remove("send");
        submitIcon?.classList.remove("active");
        form?.classList.remove("active");
      }
    };

    textarea?.addEventListener("input", updateClasses);

    submit?.addEventListener("click", () => {
      if ((textarea as HTMLTextAreaElement).value.length > 0) {
        submit.classList.add("send");
        submitIcon?.classList.add("send");
        poof?.classList.add("animate");
        setTimeout(() => {
          (textarea as HTMLTextAreaElement).value = "";
          submit.classList.remove("send");
          submitIcon?.classList.remove("send");
          poof?.classList.remove("animate");
          updateClasses();
        }, 1800);
      }
    });
  });
</script>

<style lang="scss">

  .poof {
    min-width: 100px;
    display: block;
    font-style: italic;
    text-align: center;
    background-color: var(--color-paper);
    padding: var(--spacing-small);
    border-radius: 12px 0 12px 12px;
    font-size: var(--font-size-xsmall);
    font-weight: 500;
    color: var(--color-text);
    position: absolute;
    top: calc(50% - 12px);
    left: calc(50% - 50px);
    z-index: 20;
    opacity: 0;
    border: 1px solid white;
    box-shadow: 0px 10px 10px -5px rgba(108, 108, 108, 0.25);

    &.animate {
      animation: poof 1.75s ease-in-out;
    }

    @keyframes poof {
      0% {
        opacity: 0;
        transform: translateY(0);
      }
      90% {
        opacity: 1;
        transform: translateY(-100px);
      }
      100% {
        opacity: 0;
        transform: translateY(-100px);
      }
    }
  }

  .chat-input {

    .chat-input-context {
      &.active {
        opacity: 1;
        position: relative;
        top: 0;
        transform: translateY(0);
        transition-delay: 0.2s;
      }
    }

    .chat-input-form {
      .chat-input-submit {
        &::before,
        &::after {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 50%;
          background: linear-gradient(to right, #d8d6fe, #8ebeff);
          border-radius: 26px 26px 0 0;
          z-index: -1;
          filter: blur(8px);
          opacity: 0;
          transform: scale(0.75);
          transition: all .3s ease-in-out;
        }

        &::after {
          border-radius: 0 0 25px 25px;
          top: calc(100% - 26px);
          background: linear-gradient(to right, #fbb1bc, #ffcb77);
        }

        &:hover::before,
        &:focus::before,
        &.send::before,
        &.active::before {
          opacity: 1;
          transform: scale(0.85);
          animation: pulseBefore 1s ease-in-out infinite;
        }

        &:hover::after,
        &:focus::after,
        &.send::after,
        &.active::after {
          opacity: 1;
          transform: scale(0.85);
          animation: pulseAfter 1s ease-in-out infinite;
        }

        &:focus .submit-icon img,
        &.send .submit-icon img {
          animation: arrow-up 0.75s ease-in-out;
        }

        &.active .submit-icon {
          background-color: #241065;
        }
      }

      @keyframes arrow-up {
        0% {
          transform: translateY(0);
        }
        100% {
          transform: translateY(-28px);
        }
      }

      @keyframes pulseBefore {
        0% {
          background: linear-gradient(to right, #d8d6fe, #8ebeff);
        }
        50% {
          background: linear-gradient(to right, #8ebeff, #d8d6fe);
        }
        100% {
          background: linear-gradient(to right, #d8d6fe, #8ebeff);
        }
      }

      @keyframes pulseAfter {
        0% {
          background: linear-gradient(to right, #fbb1bc, #ffcb77);
        }
        50% {
          background: linear-gradient(to right, #ffcb77, #fbb1bc);
        }
        100% {
          background: linear-gradient(to right, #fbb1bc, #ffcb77);
        }
      }
    }
  }
</style>
