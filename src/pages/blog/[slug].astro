---
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogPostNavigation from "../../components/BlogPostNavigation.astro";
import BlogPostImage from "../../components/BlogPostImage.astro";
import BlogPostHeader from "../../components/BlogPostHeader.astro";
import SignatureSection from "../../components/_partials/SignatureSection.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post, index) => ({
    params: { slug: post.slug },
    props: {
      post,
      prev: index > 0 ? posts[index - 1] : null,
      next: index < posts.length - 1 ? posts[index + 1] : null,
    },
  }));
}

interface Props {
  post: CollectionEntry<"blog">;
  prev: CollectionEntry<"blog"> | null;
  next: CollectionEntry<"blog"> | null;
}

const { post, prev, next } = Astro.props;
const { Content } = await post.render();

// Dynamic import based on post slug
let blogImage;
try {
  const imagePath = `../../assets${post.data.image}`;
  console.log("Attempting to load image:", {
    postImage: post.data.image,
    constructedPath: imagePath,
  });
  blogImage = post.data.image ? (await import(imagePath)).default : null;
} catch (e) {
  console.error("Image import error:", e);
  blogImage = null;
}
---

<BaseLayout title={post.data.title} description={post.data.description || ""}>
  <div class="section-container">
    <BlogPostHeader
      title={post.data.title}
      tags={post.data.tags}
      startedDate={post.data.startedDate}
      publishDate={post.data.publishDate}
    />

    {
      blogImage && (
        <BlogPostImage
          image={blogImage}
          title={post.data.title}
          description={post.data.imageDescription}
        />

        <!-- Spacer -->
        <div class="spacer-small"></div>
      )
    }

    {!blogImage && (
      <!-- Spacer -->
      <div class="spacer-large"></div>
    )}

    <div
      class="blog-post-content"
      data-intersection-observer={true}
      data-threshold="0"
    >
      <article class="prose">
        <Content />
      </article>
    </div>
  </div>

  <!-- Spacer -->
  <div class="spacer-medium"></div>

  <!-- End of blog post -->
  <div class="section-container blog-post-end">
    <p>El fin. &mdash; byeeee!</p>
  </div>

  <!-- Navigation -->
  <div class="section-container">
    <BlogPostNavigation prev={prev} next={next} />

    <SignatureSection />
  </div>
</BaseLayout>

<style lang="scss">
  .blog-post-end p {
    font-size: var(--font-size-massive);
  }
</style>
