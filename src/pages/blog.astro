---
// Components
import BaseLayout from "../layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BlogYearSection from "../components/BlogYearSection.astro";

//Assets
import scribble from "../assets/scribbles/loop-down.svg";

// Get all blog posts
const allPosts = await getCollection("blog");

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.publishDate.getTime() - a.data.publishDate.getTime(),
);

// Filter notebooks
const notebooks = sortedPosts.filter((post: CollectionEntry<"blog">) =>
  post.data.tags?.includes("notebook"),
);

// Group other posts by year (excluding notebooks)
const postsByYear = sortedPosts
  .filter((post) => !post.data.tags?.includes("notebook"))
  .reduce((acc: Record<number, BlogPost[]>, post: BlogPost) => {
    const year = post.data.publishDate.getFullYear();
    if (!acc[year]) acc[year] = [];
    acc[year].push(post);
    return acc;
  }, {});

type BlogPost = CollectionEntry<"blog">;
---

<BaseLayout
  title="Karina Tovar | Blog"
  description="Blog posts by Karina Tovar"
>
  <div class="grid-container" data-intersection-observer={true}>
    <div class="grid-content">
      <div class="text-content">
        <h2>Blog</h2>
        <h1>Light notes & deep thoughts</h1>
        <p>
          My motivation is to build products that aim to help people have
          happier days. Life is too short to be ruined by awful experiences.
          Every product needs to be crafted for human joy.
        </p>
      </div>
    </div>
    <div class="visual">
      <Image src={scribble} alt="Scribble" loading="eager" draggable={false} />
    </div>
  </div>

  <!-- Spacer -->
  <div class="spacer-small"></div>

  <!-- Blog Posts -->
  <div class="grid-container blog-posts">
    <div
      class="grid-content blog-posts-listing"
      data-intersection-observer={true}
    >
      {
        Object.entries(postsByYear).map(([year, yearPosts]) => {
          const typedPosts = yearPosts as BlogPost[];
          return <BlogYearSection year={year} posts={typedPosts} />;
        })
      }
    </div>

    <div class="blog-posts-notes" data-intersection-observer={true}>
      <div class="blog-posts-notes-punches">
        {Array.from({ length: 6 }).map(() => <span />)}
      </div>
      <div class="blog-posts-notes-content">
        <h4>Notebooks</h4>
        {
          notebooks.map((post: BlogPost) => (
            <a href={`/blog/${post.slug}`}>{post.data.title}</a>
          ))
        }
      </div>
    </div>
  </div>
</BaseLayout>

<style lang="scss">
  // Breakpoint mixins
  @use "../styles/base/_breakpoints.scss" as *;

  .visual {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .blog-posts {
    max-width: var(--content-narrow-plus);
    margin: 0 auto;
    padding: var(--spacing-base);
    position: relative;
  }

  .blog-posts-notes {
    display: flex;
    flex-direction: row;
    position: relative;

    margin-left: 60px;

    background-color: var(--color-surface);
    padding: 40px 20px 20px 40px;
    border-radius: var(--border-radius-base);
    overflow: hidden;

    @include tablet {
      margin-top: 80px;
      margin-left: 0;
    }

    .blog-posts-notes-punches {
      position: absolute;
      top: 0;
      left: 0;
      width: 20px;
      height: 100%;
      padding: 32px 0;

      display: flex;
      flex-direction: column;
      gap: 20px;

      span {
        display: block;
        position: relative;
        min-width: 20px;
        width: 20px;
        min-height: 20px;
        height: 20px;
        background-color: var(--color-paper);
        border-radius: 50%;
        margin-left: -10px;
      }
    }

    .blog-posts-notes-content {
      flex: 1;
      display: flex;
      flex-direction: column;

      position: relative;
    }

    h4 {
      margin-bottom: var(--spacing-base);
    }

    a {
      display: block;
      padding: var(--spacing-small) 0;
      margin-bottom: var(--spacing-small);
      border-bottom: 1px solid var(--color-border);

      &:first-child {
        padding-top: 0;
      }

      &:last-child {
        border-bottom: none;
        padding-bottom: 0;
      }

      &:hover {
        text-decoration: underline;
      }
    }
  }

  // Navigation list
  .list-section {
    display: flex;
    flex-direction: column;
    list-style: none;
    padding: 0;

    li {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: var(--spacing-small);
      border-bottom: 1px solid var(--color-border);
      transition: all 0.2s ease;

      &:hover {
        background-color: var(--color-surface);
      }

      img {
        width: 24px;
        height: 24px;
      }

      a {
        color: var(--color-text);
        text-decoration: none;

        &:hover {
          text-decoration: underline;
        }
      }
    }
  }
</style>
