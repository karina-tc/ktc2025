---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import Plate from "./Plate.astro";

interface Props {
  kicker?: string;
  title?: string;
  subtitle?: string;
  className?: string;
  artwork?: {
    image: ImageMetadata;
    alt: string;
    width?: number;
  };
  plate?: {
    label?: string;
    caption?: string;
    className?: string;
  };
  spacing?: 'small' | 'base' | 'double' | 'quad' | 'none';
}

const {
  kicker,
  title,
  subtitle,
  className = "",
  artwork,
  plate,
  spacing = "quad",
} = Astro.props;
---

<div
  class:list={[
    "story-container",
    title ? "" : "no-title",
    className,
    `spacing-${spacing}`,
  ]}
  data-intersection-observer={true}
>
  {kicker && <h4>{kicker}</h4>}
  {title && <h2>{title}</h2>}
  {subtitle && <h3>{subtitle}</h3>}

  <!-- Main content slot -->
  <slot />

  <!-- Artwork section if provided -->
  {
    artwork && !plate && (
      <div class="artwork">
        <Image
          src={artwork.image}
          alt={artwork.alt}
          width={artwork.width || 320}
          draggable={false}
          loading="lazy"
        />
      </div>
    )
  }

  <!-- Plate wrapper if provided -->
  {
    plate && !artwork && (
      <Plate {...plate}>
        <slot name="plate" />
      </Plate>
    )
  }
</div>

<style lang="scss">
  @use "../../styles/base/_breakpoints.scss" as *;

  .story-container {
    width: 90%;
    max-width: 820px;
    padding: var(--spacing-double) 0;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-base);

    &.spacing-quad {
      margin: var(--spacing-quad) auto;
    }

    &.spacing-double {
      margin: var(--spacing-double) auto;
    }

    &.spacing-base {
      margin: var(--spacing-base) auto;
    }

    &.spacing-small {
      margin: var(--spacing-small) auto;
    }

    &.spacing-none {
      margin: 0 auto;
    }

    &.no-title {
      margin-top: 0;
    }

    p {
      font-size: var(--font-size-base);
    }

    h4 {
      color: var(--color-ink-tertiary);
      font-family: var(--font-sans);
      font-size: var(--font-size-small);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.1em;
      margin: 0 0 var(--spacing-xsmall);
    }

    :global(h3) {
      font-size: clamp(1.25rem, 3vw, 1.75rem);
      color: var(--color-ink-tertiary);
      font-family: var(--font-headings);
      margin: var(--spacing-base) 0 0;
    }

    h2 {
      color: var(--color-ink-secondary);
      font-family: var(--font-headings);
      font-size: clamp(2rem, 5vw, 3rem);
      margin: 0 0 var(--spacing-base);
      letter-spacing: -0.02em;
    }

    // Artwork styles
    .artwork {
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto;
    }

    // Ordered list styles
    :global(ol) {
      margin-left: var(--spacing-base);
    }

    :global(ol li) {
      margin: 0 0 var(--spacing-xsmall);
    }
  }
</style>
