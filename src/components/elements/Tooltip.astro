---
interface Props {
  text: string;
}

const { text } = Astro.props;
---

<span class="tooltip-wrapper relative inline-block">
  <span class="tooltip-trigger cursor-pointer overflow-hidden peer">
    <span class="tooltip-trigger--text font-mono uppercase caramel-text w-full h-full relative z-[1] transition-all hover:underline hover:underline-offset-4">
      {text}
    </span>
    <span id="tooltip-trigger--highlight" class="absolute inset-0 opacity-0 rounded-sm transition-all group-hover:opacity-100 group-hover:w-full"></span>
  </span>
  <span class="tooltip-content invisible opacity-0 text-sm caramel-text w-fit bg-paper dark:bg-ink p-4 rounded-md absolute top-full left-[calc(50%-28px)] -translate-x-[calc(50%-28px)] transition-all peer-hover:visible peer-hover:opacity-100 peer-hover:translate-y-0 z-[40]">
    <slot />
  </span>
</span>

<script>
  import { createPopper } from "@popperjs/core";

  class Tooltip {
    constructor(element: HTMLElement) {
      const trigger = element.querySelector(".tooltip-trigger") as HTMLElement;
      const content = element.querySelector(".tooltip-content") as HTMLElement;

      createPopper(trigger, content, {
        placement: "top",
        modifiers: [
          {
            name: "offset",
            options: {
              offset: [0, 8],
            },
          },
          {
            name: "flip",
            options: {
              fallbackPlacements: ["bottom", "right", "left"],
            },
          },
        ],
      });
    }
  }

  document.querySelectorAll(".tooltip-wrapper").forEach((tooltip) => {
    new Tooltip(tooltip as HTMLElement);
  });
</script>
