---
import { Image } from "astro:assets";

interface Props {
  large?: boolean;
  interactive?: boolean;
  interactiveLabel?: string;
  image?: ImageMetadata;
  imageAlt?: string;
  title?: string;
  caption?: string;
  maxWidth?: number;
  imageStyles?: string;
  minHeight?: number;
}

const {
  large = false,
  interactive = false,
  interactiveLabel = "Play With It!",
  image,
  imageAlt = "",
  title,
  caption,
  maxWidth,
  imageStyles,
  minHeight = 520,
} = Astro.props;
---

<div class:list={[
  "snippets-gallery-item w-full bg-surface p-5 max-md:p-3 border-4 border-surface rounded-xl overflow-hidden transition-all duration-300 hover:border-paper hover:shadow-[0px_10px_10px_-5px_rgba(108,108,108,0.25)]",
  { "lg:col-span-2 md:col-span-1": large }
]}>
  {interactive && <span class="interactive-label block w-full text-center text-xs font-semibold font-mono uppercase tracking-[0.05em] text-chocolate opacity-70 transition-all duration-300 group-hover:opacity-100">{interactiveLabel}</span>}
  {title && <p class="plate-label !text-ink-tertiary">{title}</p>}
  <div 
    class="gallery-inner w-full h-auto flex flex-col items-center justify-between max-sm:!min-h-auto" 
    style={`min-height: ${minHeight}px`}
    data-intersection-observer={true}
  >
    {
      image ? (
        <Image
          src={image}
          alt={imageAlt}
          draggable="false"
          width={440}
          loading="lazy"
          class="m-auto w-full h-auto object-contain md:w-full md:h-auto md:object-contain"
          style={`max-width: ${maxWidth}px; ${imageStyles}`}
        />
      ) : (
        <slot />
      )
    }
    {caption && <span class="plate-caption !text-ink-tertiary">{caption}</span>}
  </div>
</div>
