---
// Components
import { Image } from "astro:assets";
import BaseLayout from "../layouts/BaseLayout.astro";
import Atom from "../components/Atom.astro";
import SelfCard from "../components/_partials/SelfCard.astro";
import Subtitle from "../components/Subtitle.astro";

// Utils
import { getReader } from "../utils/reader";

// Assets
import qrCode from "../assets/brand/qr-code-transparent.png";

// Get the referrer and reader from URL params
const url = Astro.url;
const referrer = url.searchParams.get("referrer");
const reader = getReader();

// Default greeting if no reader specified
const greeting = reader ? `${reader}` : "friend";

// Import all backgrounds in one line using an array
const backgrounds = await Promise.all(
  [...Array(4)].map(
    (_, i) =>
      import(`../assets/backgrounds/bg${String(i + 1).padStart(2, "0")}.png`),
  ),
).then((modules) => modules.map((m) => m.default));

const selectedBg =
  backgrounds[Math.floor(Math.random() * backgrounds.length)].src;

// For debugging
console.log("Selected background:", selectedBg);

// Add this to your frontmatter
const details = [
  { label: "Experience", value: "10 years" },
  { label: "Level", value: "Super IC" },
  { label: "Current Role", value: "Lead Product Designer" },
  { label: "Current Company", value: "Tropic" },
  { label: "Location", value: "East Coast, USA" },
];

// Add this to your frontmatter with other constants
const links = [
  { href: "/resume", text: "Resume" },
  { href: "/work", text: "Work Samples" },
  { href: "/about", text: "About Me" },
  { href: "/philosophy", text: "My Philosophy" },
];

const socialLinks = [
  { type: "button", text: "Share", action: "share" },
  {
    type: "link",
    text: "LinkedIn",
    href: "https://linkedin.com/in/yourusername",
  },
  { type: "link", text: "GitHub", href: "https://github.com/yourusername" },
];

const contactInfo = {
  email: "karina@karinatovar.com",
};
---

<BaseLayout
  title="Share | Karina Tovar"
  description="Karina Tovar - Lead Product Designer"
  includeNavigation={false}
  includeFooter={false}
>
  <div class="main-wrapper">
    <div class="content-wrapper">
      <!-- Left Column -->
      <div class="col-left">
        <div class="greeting">
          <Atom />
          <h4>Karina Tovar</h4>
          <h1>Hello {greeting}</h1>
        </div>
        <SelfCard
          showTags={false}
          showDetails={false}
          defaultActive={true}
          forceActive={true}
        />
      </div>

      <!-- Right Column -->
      <div class="col-right">
        <aside class="details-section">
          <div class="listing">
            <Subtitle title="My Details" />
            {
              details.map(({ label, value }) => (
                <div class="detail">
                  <span>{label}:</span>
                  <span>{value}</span>
                </div>
              ))
            }
            <div class="footer">
              <p>
                To get started, here are the links you need to get to know me
                better:
              </p>
              <ul>
                {
                  links.map(({ href, text }) => (
                    <li>
                      <a href={href} target="_blank">
                        {text}
                      </a>
                    </li>
                  ))
                }
              </ul>
              <div class="contact">
                <p>
                  If you have any questions, please feel free to reach out to me
                  directly at:
                </p>
                <a href={`mailto:${contactInfo.email}`}>{contactInfo.email}</a>
              </div>
            </div>
          </div>
        </aside>

        <div class="share-section">
          <Image
            src={qrCode}
            alt="QR Code"
            width={100}
            height={100}
            draggable={false}
          />
          {
            socialLinks.map((link) =>
              link.type === "button" ? (
                <button>{link.text}</button>
              ) : (
                <a href={link.href} target="_blank" rel="noopener noreferrer">
                  {link.text}
                </a>
              ),
            )
          }
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  // Import reader utility
  import { getReader, setReader } from "../utils/reader";

  const urlReader = new URLSearchParams(window.location.search).get("reader");
  if (urlReader) {
    setReader(urlReader);
    const greetingElement = document.getElementById("greeting");
    if (greetingElement) {
      greetingElement.textContent = `MY PHILOSOPHY (HI ${urlReader} ðŸ‘‹)`;
    }
  }
</script>

<style lang="scss" define:vars={{ backgroundUrl: `url(${selectedBg})` }}>
  // Breakpoint mixins
  @import "../styles/base/_breakpoints.scss";

  .main-wrapper {
    min-height: 100vh;
    background-image: var(--backgroundUrl);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-color: #f0f0f0;
  }

  .content-wrapper {
    // Grid Layout
    display: grid;
    grid-template-columns: minmax(auto, 480px) minmax(auto, 420px);
    gap: var(--spacing-base);
    align-items: center;
    justify-content: center;

    // Sizing
    width: 100%;
    max-width: 1440px;
    min-height: 100vh;
    margin: 0 auto;
    padding: var(--spacing-double) var(--spacing-base) var(--spacing-quad);

    // Visual
    background-color: var(--color-paper);
    box-shadow: 0 0 20px rgba(114, 93, 93, 0.5);

    // Column styles
    .col-left {
      display: grid;
      grid-template-rows: auto 1fr;
      gap: var(--spacing-base);
      align-self: start;
      justify-self: start;

      .greeting {
        display: grid;
        gap: var(--spacing-small);

        h4 {
          font-family: var(--font-sans);
          font-size: var(--font-size-small);
          font-weight: 600;
          color: var(--color-coffee);
          text-transform: uppercase;
          letter-spacing: 0.1em;
          margin: var(--spacing-base) 0 12px;
        }
      }
    }

    .col-right {
      display: grid;
      grid-template-rows: 1fr auto;
      gap: var(--spacing-double);
      align-self: start;

      // Aside styles
      aside {
        width: 100%;
        max-width: 420px;
        margin: 0 auto;

        .listing {
          position: relative;
          font-family: var(--font-sans);
          color: var(--color-ink-secondary);
          background-color: var(--color-surface);
          border-radius: 12px;
          overflow: hidden;
          padding: var(--spacing-base) var(--spacing-base) var(--spacing-small);
        }

        // Detail items
        & .detail {
          width: 100%;
          height: 28px;
          display: flex;
          justify-content: space-between;
          align-items: center;

          // Typography
          letter-spacing: 0.1em;
          text-transform: uppercase;
          font-weight: 500;
          font-size: var(--font-size-xsmall);
          font-family: var(--font-mono);
        }

        // Footer section
        & .footer {
          display: flex;
          flex-direction: column;
          align-items: flex-start;
          gap: var(--spacing-base);

          // Typography and spacing
          font-size: var(--font-size-small);
          padding: var(--spacing-base) 0 var(--spacing-small);
          margin-top: var(--spacing-base);
          border-top: 1px dashed var(--color-coffee);

          p {
            line-height: 1.8;
          }

          // Links list
          ul {
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            list-style: none;
            margin: -20px 0 var(--spacing-small);

            li {
              width: 100%;
              display: flex;
              justify-content: start;
              align-items: center;
              padding: var(--spacing-small) 0;
              border-bottom: 1px dashed rgba(255, 255, 255, 0.2);
            }
          }

          // Contact section
          .contact {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            margin-top: -20px;
            padding-top: var(--spacing-base);
            border-top: 1px dashed var(--color-coffee);

            a {
              font-weight: 300;
              font-size: var(--font-size-massive);
              font-family: var(--font-headings);
              color: var(--color-ink-tertiary);
            }
          }
        }

        @include desktop-reverse {
          min-width: 420px;
        }
      }

      // Share container
      .share-section {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: var(--spacing-base);
      }
    }

    // Global component styles
    :global(.trading-card) {
      padding: 0;
      max-width: 420px;
    }
    :global(.subtitle) {
      margin-top: 10px;
      font-family: var(--font-headings);
    }
  }

  // Responsive styles
  @include desktop-reverse {
    .col-right {
      margin-top: 250px;
    }
  }
  @media screen and (max-width: 1024px) {
    .content-wrapper {
      gap: 0;
      grid-template-columns: minmax(auto, 420px) minmax(auto, 420px);
    }
  }
  @media (max-width: 880px) {
    .content-wrapper {
      grid-template-columns: 1fr;
      grid-template-rows: auto auto;
      padding: var(--spacing-base);
      gap: var(--spacing-base);

      .col-left,
      .col-right {
        max-width: 360px;
        margin: 0 auto;
        width: 100%;
      }
      .col-right {
        aside {
          .detail {
            font-size: var(--font-size-xxs);
          }
        }
      }
    }
  }
</style>
